paths:
  /api/products:
    get:
      summary: "get all products created"
      tags:
        - Products
      responses:
        "200":
          description: "successfully obtained products"
        "500":
          description: "error getting products"

  /api/products/{prodId}:
    get:
      summary: "get a product based on its ID"
      tags:
        - prodId
      parameters:
        - name: prodId
          in: path
          required: true
          description: "ID to search a product"
          schema:
            type: string
      responses:
        "200":
          description: "product found successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          description: "error when searching for the product"

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: "ID generated by MongoDB"
        name:
          type: string
          description: "product name"
        description:
          type: string
          description: "product description"
        stock:
          type: number
          description: "product stock"
        price:
          type: number
          description: "product price"
      examples:
        _id: ObjectId("awdawd")
        name: "iPhone"
        description: "iPhone red"
        stock: 23
        price: 2500
