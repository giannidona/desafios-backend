paths:
  /api/users:
    get:
      summary: "get all users created"
      tags:
        - Users
      responses:
        "200":
          description: "successfully obtained users"
        "500":
          description: "error getting users"

  /api/users/{userId}:
    get:
      summary: "get an user based on its ID"
      tags:
        - UserId
      parameters:
        - name: userId
          in: path
          required: true
          description: "ID to search an user"
          schema:
            type: string
      responses:
        "200":
          description: "user found successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: "error when searching for the user"

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: "ID generated by MongoDB"
        name:
          type: string
          description: "user name"
        email:
          type: string
          description: user email"
        password:
          type: string
          description: "user password"
      examples:
        _id: ObjectId("awdawd")
        name: "Gianluca"
        email: "gianluca@gmail.com"
        password: "awdaw23"
